# https://madaidans-insecurities.github.io/guides/linux-hardening.html#boot-parameters
# A lot more would be possible but one needs to research every single of these to check implications.
# 
# kernel.kexec_load_disabled=1 will prevent luks (disk encryption from working).
# Use `sysbench cpu --threads=12 run` to benchmark the CPU. Threads = cores*2.
- name: Update Grub default config
  lineinfile:
    dest: "/etc/default/grub"
    line: GRUB_CMDLINE_LINUX_DEFAULT="{{ grub_cmdline_add_args | join(' ') }}"
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="'
  register: grub_config
  vars:
    grub_cmdline_add_args:
      # Part 1 - Prevents a lot of attacks with few performance issues.
      - slab_nomerge  # https://tails.boum.org/contribute/design/kernel_hardening/
      - init_on_free=1
      - slub_debug=FZ
      - vsyscall=none
      - page_alloc.shuffle=1
      - kernel.kptr_restrict=2
      - vm.mmap_rnd_bits=32
      - vm.mmap_rnd_compat_bits=16
      - pti=on
      - randomize_kstack_offset=on
      - debugfs=off
      - quiet loglevel=0
      - spectre_v2=auto
      - spec_store_bypass_disable=auto
      - tsx=auto   # https://www.phoronix.com/news/Intel-TSX-Off-New-Microcode
      - kvm.nx_huge_pages=auto  # https://www.suse.com/support/kb/doc/?id=000019411

      # Part 2 - As soon as we want to protect against side-channel-attacks the cpu performance drops heavily.
      # For example: Malicious code in a VM could potentially read secrets from another VM with a side-channel attack.
      # This part is disabled for now.
      # - mds=full,nosmt # Reduces CPU by almost 40%! https://www.kernel.org/doc/html/latest/admin-guide/hw-vuln/mds.html
      # - tsx_async_abort=full,nosmt # https://access.redhat.com/articles/tsx-asynchronousabort


 

- name: Update grub with newly written config
  command: update-grub
  when: grub_config.changed